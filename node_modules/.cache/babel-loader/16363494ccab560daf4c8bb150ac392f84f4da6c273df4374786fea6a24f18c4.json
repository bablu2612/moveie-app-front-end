{"ast":null,"code":"var _jsxFileName = \"/home/bablu/Music/movies-test-app/moveie-app-front-end/src/pages/Movies/Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport image from '../../Assets/Image.png';\nimport image1 from '../../Assets/Image1.png';\nimport image2 from '../../Assets/Image2.png';\nimport image3 from '../../Assets/Image3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMovies } from '../../Reducer/MovieSlice';\n\n// Example items, to simulate fetching from another resources.\n\n// const items = [\n//     {\n//         image:image,\n//         title:'Movie',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie2',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie3',\n//         year:'2021',\n//     },\n//     {\n//         image:image,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n// ];\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Items({\n  currentItems\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value === null || value === void 0 ? void 0 : value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value === null || value === void 0 ? void 0 : value.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_c = Items;\nconst MoviesList = ({\n  itemsPerPage\n}) => {\n  _s();\n  // const [itemOffset, setItemOffset] = useState(0);\n  // const endOffset = itemOffset + itemsPerPage;\n  // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  // const currentItems = items.slice(itemOffset, endOffset);\n  // const pageCount = Math.ceil(items.length / itemsPerPage);\n  const data = useSelector(state => state === null || state === void 0 ? void 0 : state.movies);\n  // const {currentPage,movies,totalMovies,totalPages}=data\n  console.log(\"dataaa\", data);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    await dispatch(getAllMovies());\n  }, [dispatch, getAllMovies]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    // const newOffset = (event.selected * itemsPerPage) % items.length;\n    // setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MoviesList, \"baHjFRQWbTEQf9QRfrBhqxEE/Ug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = MoviesList;\nexport default MoviesList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"MoviesList\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","ReactPaginate","image","image1","image2","image3","useDispatch","useSelector","getAllMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","Items","currentItems","children","map","value","index","className","src","fileName","_jsxFileName","lineNumber","columnNumber","title","year","_c","MoviesList","itemsPerPage","_s","data","state","movies","console","log","dispatch","handlePageClick","event","_c2","$RefreshReg$"],"sources":["/home/bablu/Music/movies-test-app/moveie-app-front-end/src/pages/Movies/Movies.js"],"sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport image from '../../Assets/Image.png'\nimport image1 from '../../Assets/Image1.png'\nimport image2 from '../../Assets/Image2.png'\nimport image3 from '../../Assets/Image3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMovies } from '../../Reducer/MovieSlice';\n\n// Example items, to simulate fetching from another resources.\n\n// const items = [\n//     {\n//         image:image,\n//         title:'Movie',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie2',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie3',\n//         year:'2021',\n//     },\n//     {\n//         image:image,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n// ];\n\nfunction Items({ currentItems }) {\n  return (\n    <>\n      {currentItems &&\n        currentItems.map((value,index) => (\n            <div key={index} className='container'>\n                <div className='row'>\n                    <div className='card'>\n                    <img src={value?.image}/>\n                    <strong>{value?.title}</strong>\n                    <strong>{value?.year}</strong>\n                    </div>\n                </div>\n\n            </div>\n        ))}\n    </>\n  );\n}\n\nconst MoviesList = ({itemsPerPage}) => {\n    // const [itemOffset, setItemOffset] = useState(0);\n    // const endOffset = itemOffset + itemsPerPage;\n    // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    // const currentItems = items.slice(itemOffset, endOffset);\n    // const pageCount = Math.ceil(items.length / itemsPerPage);\n    const data = useSelector((state) => state?.movies)\n    // const {currentPage,movies,totalMovies,totalPages}=data\n    console.log(\"dataaa\",data)\n\n    const dispatch=useDispatch()\n    useEffect(async()=>{\n     await dispatch(getAllMovies())\n\n    },[dispatch,getAllMovies])\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      // const newOffset = (event.selected * itemsPerPage) % items.length;\n      // setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        {/* <Items\n         currentItems={currentItems}\n         />\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\"next >\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          previousLabel=\"< previous\"\n          renderOnZeroPageCount={null}\n        /> */}\n      </>\n    );\n  };\n\n  export default MoviesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}