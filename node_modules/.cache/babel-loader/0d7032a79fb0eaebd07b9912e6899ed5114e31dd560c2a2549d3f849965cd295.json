{"ast":null,"code":"var _jsxFileName = \"/home/bablu/Music/movies-test-app/moveie-app-front-end/src/pages/Movies/Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport image from '../../Assets/Image.png';\nimport image1 from '../../Assets/Image1.png';\nimport image2 from '../../Assets/Image2.png';\nimport image3 from '../../Assets/Image3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMovies } from '../../Reducer/MovieSlice';\n\n// Example items, to simulate fetching from another resources.\n\n// const items = [\n//     {\n//         image:image,\n//         title:'Movie',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie2',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie3',\n//         year:'2021',\n//     },\n//     {\n//         image:image,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n// ];\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Items({\n  currentItems\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: value === null || value === void 0 ? void 0 : value.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value === null || value === void 0 ? void 0 : value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: value === null || value === void 0 ? void 0 : value.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_c = Items;\nconst MoviesList = ({\n  itemsPerPage\n}) => {\n  _s();\n  const {\n    movies,\n    currentPage,\n    totalMovies,\n    totalPages\n  } = useSelector(state => {\n    var _state$movies;\n    return state === null || state === void 0 ? void 0 : (_state$movies = state.movies) === null || _state$movies === void 0 ? void 0 : _state$movies.movieData;\n  });\n  const [itemOffset, setItemOffset] = useState(0);\n  const endOffset = itemOffset + itemsPerPage;\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  // const {currentPage,movies,totalMovies,totalPages}=data\n  console.log(\"dataaa\", movies);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllMovies({\n      page: currentPage,\n      limit: itemsPerPage\n    }));\n  }, [dispatch]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    setItemOffset(newOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MoviesList, \"bAQYZffF+WXGUmHJmBA+adBcQqg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = MoviesList;\nexport default MoviesList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"MoviesList\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","ReactPaginate","image","image1","image2","image3","useDispatch","useSelector","getAllMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","Items","currentItems","children","map","value","index","className","src","fileName","_jsxFileName","lineNumber","columnNumber","title","year","_c","MoviesList","itemsPerPage","_s","movies","currentPage","totalMovies","totalPages","state","_state$movies","movieData","itemOffset","setItemOffset","endOffset","console","log","items","slice","pageCount","Math","ceil","length","dispatch","page","limit","handlePageClick","event","newOffset","selected","_c2","$RefreshReg$"],"sources":["/home/bablu/Music/movies-test-app/moveie-app-front-end/src/pages/Movies/Movies.js"],"sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport image from '../../Assets/Image.png'\nimport image1 from '../../Assets/Image1.png'\nimport image2 from '../../Assets/Image2.png'\nimport image3 from '../../Assets/Image3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllMovies } from '../../Reducer/MovieSlice';\n\n// Example items, to simulate fetching from another resources.\n\n// const items = [\n//     {\n//         image:image,\n//         title:'Movie',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie2',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie3',\n//         year:'2021',\n//     },\n//     {\n//         image:image,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image2,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image3,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n//     {\n//         image:image1,\n//         title:'Movie1',\n//         year:'2021',\n//     },\n// ];\n\nfunction Items({ currentItems }) {\n  return (\n    <>\n      {currentItems &&\n        currentItems.map((value,index) => (\n            <div key={index} className='container'>\n                <div className='row'>\n                    <div className='card'>\n                    <img src={value?.image}/>\n                    <strong>{value?.title}</strong>\n                    <strong>{value?.year}</strong>\n                    </div>\n                </div>\n\n            </div>\n        ))}\n    </>\n  );\n}\n\nconst MoviesList = ({itemsPerPage}) => {\n  const {movies,currentPage,totalMovies,totalPages} = useSelector((state) =>{ return state?.movies?.movieData})\n    const [itemOffset, setItemOffset] = useState(0);\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    const currentItems = items.slice(itemOffset, endOffset);\n    const pageCount = Math.ceil(items.length / itemsPerPage);\n\n    // const {currentPage,movies,totalMovies,totalPages}=data\n    console.log(\"dataaa\",movies)\n\n    const dispatch=useDispatch()\n    useEffect(()=>{\n      dispatch(getAllMovies({page:currentPage,limit:itemsPerPage}))\n\n    },[dispatch])\n\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % items.length;\n      setItemOffset(newOffset);\n    };\n\n    return (\n      <>\n        {/* <Items\n         currentItems={currentItems}\n         />\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\"next >\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          previousLabel=\"< previous\"\n          renderOnZeroPageCount={null}\n        /> */}\n      </>\n    );\n  };\n\n  export default MoviesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}